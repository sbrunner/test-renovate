name: Continuous integration

on:
  push:
    branches:
      - master
  pull_request:

env:
  HAS_SECRETS: ${{ secrets.HAS_SECRETS }}

jobs:
  main:
    runs-on: ubuntu-20.04
    name: Continuous integration
    timeout-minutes: 10
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: camptocamp/initialise-gopass-summon-action@v2
        with:
          ci-gpg-private-key: ${{secrets.CI_GPG_PRIVATE_KEY}}
          github-gopass-ci-token: ${{secrets.GOPASS_CI_GITHUB_TOKEN}}
        if: env.HAS_SECRETS == 'HAS_SECRETS'

      - run: echo "${HOME}/.local/bin" >> ${GITHUB_PATH}
      - run: python3 -m pip install --user --requirement=ci/requirements.txt

      - name: Checks
        run: c2cciutils-checks

      - name: Test the update-image-hash script
        run: scripts/update-image-hash camptocamp/mapserver:7.6-20-04
        timeout-minutes: 1
      - run: c2cciutils-checks --fix --check=prettier
      - run: git diff

  sync:
    runs-on: ubuntu-20.04
    name: ArgoCD - sync dryrun
    timeout-minutes: 10
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"
    env:
      ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
      # argocd.apps.gs-ch-dev.camptocamp.com:443
      ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}
      ARGOCD_OPTS: --grpc-web
      KUBECTL_EXTERNAL_DIFF: diff -u

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup ArgoCD
        run: |
          mkdir "$GITHUB_WORKSPACE/bin"
          curl -L https://github.com/argoproj/argo-cd/releases/download/v2.0.3/argocd-linux-amd64 > "$GITHUB_WORKSPACE/bin/argocd"
          echo "$GITHUB_WORKSPACE/bin" >> "$GITHUB_PATH"
          chmod +x "$GITHUB_WORKSPACE/bin/argocd"

      - name: ArgoCD - sync
        run: scripts/argocd-sync --dry-run
